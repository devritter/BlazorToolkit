<div class="bz-dump">
    <div class="bz-border-1">
        <div class="bz-border-2">
            <div class="bz-border-3">
                <div class="bz-dump-inside">
                    @if (Value is null)
                    {
                        <span class="bz-dump-null-value">null</span>
                    }
                    else if (_vm.IsPrimitive)
                    {
                        <span class="bz-dump-value" title="@_vm.Tooltip">
                            @if (Value is bool booleanValue)
                            {
                                if (booleanValue)
                                {
                                    <span class="bz-dump-bool-true">@booleanValue</span>
                                }
                                else
                                {
                                    <span class="bz-dump-bool-false">@booleanValue</span>
                                }
                            }
                            else
                            {
                                @_vm.ValueToString()
                            }
                        </span>
                    }
                    else // complex or collection
                    {
                        <div>
                            @if (_vm.IsExpanded)
                            {
                                <span class="expandable expanded" @onclick="ToggleExpanded"></span>
                            }
                            else
                            {
                                <span class="expandable collapsed" @onclick="ToggleExpanded"></span>
                            }

                            <span class="bz-dump-value" title="@_vm.Tooltip">
                                @_vm.ValueToString()
                            </span>
                        </div>
                        @if (_vm.IsExpanded)
                        {
                            @if (_vm.IsCollection && _vm.CollectionCount.GetValueOrDefault(1) > 0)
                            {
                                <table class="bz-dump-table">
                                    @foreach (var item in _vm.GetCollectionItems())
                                    {
                                        <tr>
                                            <td>
                                                <BzDump Value="item"/>
                                            </td>
                                        </tr>
                                    }
                                </table>
                            }
                            else if (_vm.Properties != null)
                            {
                                <table class="bz-dump-table">
                                    @foreach (var item in _vm.Properties)
                                    {
                                        <tr>
                                            <th>@item.Name</th>
                                            <td>
                                                <BzDump Value="_vm.GetPropertyValue(item)"/>
                                            </td>
                                        </tr>
                                    }
                                </table>
                            }
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] [EditorRequired] public object? Value { get; set; }
    private BzDumpVm _vm = BzDumpVm.NullValue;

    protected override void OnParametersSet()
    {
        if (Value == null)
        {
            _vm = BzDumpVm.NullValue;
        }
        else
        {
            var sameValue = ReferenceEquals(Value, _vm.Value);
            if (!sameValue)
            {
                var isExpanded = _vm.IsExpanded;
                _vm = new BzDumpVm(Value)
                {
                    IsExpanded = isExpanded
                };
            }
        }

        base.OnParametersSet();
    }

    private void ToggleExpanded()
    {
        _vm.IsExpanded = !_vm.IsExpanded;
    }

}